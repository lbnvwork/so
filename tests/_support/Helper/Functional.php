<?php

namespace Helper;

// here you can define custom actions
// all public methods declared in helper class will be available in $I

use Codeception\Module\ZendExpressive;
use Doctrine\ORM\EntityManager;
use Office\Entity\ApiKey;

/**
 * Class Functional
 *
 * @package Helper
 */
class Functional extends \Codeception\Module
{
    public function _initialize()
    {
        $this->debug('Copy test config files');
        move_uploaded_file(codecept_root_dir().'/config/autoload/doctrine.local.php',codecept_root_dir().'/config/autoload/doctrine.local.php.back');
        copy(codecept_root_dir().'/config/autoload/test.doctrine.local.php.dist', codecept_root_dir().'/config/autoload/test.doctrine.local.php');
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function _afterSuite()
    {
        $this->debug('Remive test config files');
        $doctrineConfig = codecept_root_dir().'/config/autoload/test.doctrine.local.php';
        if (file_exists($doctrineConfig)) {
            unlink($doctrineConfig);
        }
        move_uploaded_file(codecept_root_dir().'/config/autoload/doctrine.local.php.back',codecept_root_dir().'/config/autoload/doctrine.local.php');

        parent::_afterSuite(); // TODO: Change the autogenerated stub
    }

    public function fail($message)
    {
        $this->_afterSuite();
    }
//    /**
//     * @throws \Codeception\Exception\ModuleException
//     * @throws \Doctrine\ORM\ORMException
//     * @throws \Doctrine\ORM\OptimisticLockException
//     */
//    public function addTestApiKeyAccess(): void
//    {
//        /** @var ZendExpressive $module */
//        $module = $this->getModule('ZendExpressive');
//        /** @var EntityManager $entityManager */
//        $entityManager = $module->_getEntityManager();
//
//        $apiKey = new ApiKey();
//        $login = 'test_api';
//        $password = '123456';
//
//        $apiKey->setLogin($login)
//            ->setPassword(hash('ripemd128', $password));
//        $entityManager->persist($apiKey);
//        $entityManager->flush();
//    }


//    public function openCheckoutFormStep2($orderId) {
//        var_dump($this->getModule('ZendExpressive')->_loadPage('POST', '/lk/api/v1/token', ['login' => $orderId, 'password' => 'asd']));
//    }
//
//    public function seeResponseContains($text)
//    {
//        $this->assertStringContainsString($text, $this->getModule('ZendExpressive')->_getResponseContent(), "response contains");
//    }
}
